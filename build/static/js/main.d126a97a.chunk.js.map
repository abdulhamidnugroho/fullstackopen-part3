{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","onChange","value","Persons","persons","handleDelete","map","person","className","name","number","id","onClick","PersonForm","props","onSubmit","submit","newName","onChangePerson","newNumber","onChangeNumber","type","baseUrl","personsService","getAll","axios","get","then","response","data","create","newObject","post","update","put","destroy","delete","Notification","message","console","log","undefined","success","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","initialPersons","length","event","target","preventDefault","personObject","some","el","toLowerCase","window","confirm","find","updatedPerson","editedPerson","setTimeout","catch","error","returnedPerson","concat","includes","parsedValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d126a97a.chunk.js","sourcesContent":["\r\nconst Filter = ({filter, onChange}) => {\r\n  return (\r\n    <div>\r\n      filter shown with : <input value={filter} onChange={onChange}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","const Persons = ({persons, handleDelete}) => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {persons.map(person => \r\n          <li className=\"list-person\" key={person.name} >{person.name}  -  {person.number} <button value={person.id} onClick={handleDelete}>delete</button></li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons","const PersonForm = (props) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.submit}>\r\n        <div>\r\n          name: <input value={props.newName} onChange={props.onChangePerson}/>\r\n        </div>\r\n        <div>\r\n          number: <input value={props.newNumber} onChange={props.onChangeNumber}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst destroy = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst personsService = { getAll, create, update, destroy }\r\n\r\nexport default personsService","const Notification = ({ message }) => {\r\n  console.log(message)\r\n  if (message === undefined || message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={ message.success === true ? 'success' : 'error'}>\r\n      {message.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useEffect, useState } from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport personsService from './services/persons'\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ message, setMessage ] = useState()\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const check = persons.some(el => el.name.toLowerCase() === newName.toLowerCase())\n\n    if (check) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        console.log('update', personObject)\n\n        const person = persons.find(el => el.name.toLowerCase() === newName.toLowerCase())\n        const updatedPerson = { ...person, number: newNumber}\n\n        personsService\n          .update(person.id, updatedPerson)\n          .then(editedPerson => {\n              setPersons(persons.map(el => el.id !== editedPerson.id \n                ? el \n                : editedPerson)\n              )\n              setMessage({\n                success: true,\n                message: `Updated ${newName}`\n              })\n              setTimeout(() => setMessage(null), 5000)\n            }\n          )\n          .catch(error => {\n            setMessage({\n              success: false,\n              message: `${error.response.data.error}`,\n            })\n            setTimeout(() => setMessage(null), 5000)\n          })\n      }\n    } else {\n      console.log('create')\n\n      personsService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setMessage({\n            success: true,\n            message: `Added ${newName}`\n          })\n          setTimeout(() => setMessage(null), 5000)\n        })\n        .catch(error => {\n          setMessage({\n            success: false,\n            message: `${error.response.data.error}`\n          })\n        })\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handlePersonChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const handleDelete = (event) => {\n    event.preventDefault()\n\n    const parsedValue = event.target.value\n\n    if (window.confirm(\"Do you really want to delete this record?\")) {\n      personsService\n        .destroy(parsedValue)\n        .then(() => {\n          setPersons(persons.filter(el => el.id !== parsedValue))\n          console.log(persons)\n        })\n    }\n  }\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n  }, [])\n\n  console.log('render ', persons.length, ' persons')\n  \n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} />\n      <Filter filter={filter} onChange={handleFilterChange} />\n      <h2>Add a New</h2>\n      <PersonForm \n        submit={addPerson}\n        newName={newName} \n        newNumber={newNumber} \n        onChangePerson={handlePersonChange} \n        onChangeNumber={handleNumberChange} \n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons.filter(el => el.name.toLowerCase().includes(filter))} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}